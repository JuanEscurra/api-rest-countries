{"version":3,"sources":["components/ui/Navbar.js","components/countries/CountryItem.js","components/countries/CountriesList.js","components/countries/SearchCountries.js","helpers/getCountries.js","hooks/useGetCountries.js","components/home/HomeScreen.js","components/countries/CountryScreen.js","router/AppRouter.js","App.js","index.js"],"names":["Navbar","useState","mode","setMode","className","to","onClick","document","documentElement","style","setProperty","CountryItem","country","history","useHistory","push","alpha3Code","toLowerCase","src","img","loading","alt","name","population","region","capital","CountriesList","countries","length","map","flag","SearchCountries","setCountry","handleSearch","e","undefined","target","value","get","id","placeholder","onChange","defaultValue","getCountries","a","fetch","json","jsonCountries","status","getCountriesByName","getCountriesByRegion","getCountriesByCode","code","useGetCountries","state","setState","useEffect","then","data","HomeScreen","CountryScreen","useParams","nativeName","subregion","topLevelDomain","domain","currencies","currency","languages","language","borders","border","AppRouter","exact","path","component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1811f682.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport const Navbar = () => {\n\n    const [mode, setMode] = useState('light')\n\n    const changeMode = () => {\n        if(mode === 'light') {\n            document.documentElement.style.setProperty('--primary','hsl(207, 26%, 17%)');\n            document.documentElement.style.setProperty('--secondary','hsl(0, 0%, 100%)');\n            setMode('dark')\n        } else {\n            document.documentElement.style.setProperty('--primary','hsl(0, 0%, 98%)');\n            document.documentElement.style.setProperty('--secondary','hsl(200, 15%, 8%)');\n            setMode('light');\n        }\n    }\n\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar__logo\">\n                <Link to=\"/api-rest-countries/\" className=\"navbar__title\">Where in the world?</Link>\n            </div>\n            <ul className=\"navbar__list\">\n                <li className=\"navbar__item\">\n                    <button className=\"navbar__btn\" onClick={changeMode}>\n                        <i className=\"far fa-moon\"></i> Dark Mode\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport const CountryItem = ({country}) => {\n\n    const history = useHistory();\n\n    const viewDetails = () => {\n        history.push(`/api-rest-countries/country/${country.alpha3Code.toLowerCase()}`);\n    }\n\n    return (\n        <div className=\"country\" onClick={viewDetails}>\n            <img src={country.img} loading=\"lazy\" alt={country.name} className=\"country__img\"/>\n            <div className=\"country__description\">\n                <h4>{country.name}</h4>\n                <p>Population: <span>{country.population}</span></p>\n                <p>Region: <span>{country.region}</span></p>\n                <p>Capital: <span>{country.capital}</span></p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {CountryItem} from './CountryItem'\n\nexport const CountriesList = ({countries}) => {\n\n    return (\n        <div className=\"countries__list\">\n            {\n                countries?.length !== 0 || <span>No se encontro paises</span>\n            }\n            {\n                \n                countries?.map(country => (\n                    <CountryItem key={country.alpha3Code}\n                        country={\n                            {\n                                alpha3Code: country.alpha3Code,\n                                name: country.name,\n                                population: country.population,\n                                region: country.region,\n                                capital: country.capital,\n                                img: country.flag\n                            }\n                        }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const SearchCountries = ({setCountry}) => {\n\n    const handleSearch = (e) => {\n        if(e.target.value !== undefined && e.target.value !== \"\") {\n            setCountry({\n                get: e.target.name === 'region' ? 'byRegion': 'byName',\n                country: {[e.target.name]: e.target.value}\n            });\n        } else {\n            setCountry({\n                get: 'all'\n            })\n        }\n    }\n\n    return (\n        <form className=\"search\">\n            <div className=\"search__camp--input\">\n                <i className=\"fas fa-search\"></i>\n                <input className=\"search__input\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"Search for a country\"\n                    onChange={handleSearch} />\n            </div>\n            <div className=\"search__camp--select\">\n                <select name=\"region\" id=\"region\" className=\"search__select\" onChange={handleSearch}>\n                    <option value=\"\" defaultValue>Filter by Region</option>\n                    <option value=\"africa\">Africa</option>\n                    <option value=\"americas\">Americas</option>\n                    <option value=\"asia\">Asia</option>\n                    <option value=\"europe\">Europe</option>\n                    <option value=\"oceania\">Oceania</option>\n                </select>\n            </div>\n        </form>\n    )\n}\n","\nexport const getCountries = async() => {\n    const countries = await fetch(`https://restcountries.eu/rest/v2/all?\n        fields=alpha3Code;name;population;region;capital;flag`);\n    const jsonCountries = await countries.json();\n    if(jsonCountries.status === 404) {\n        return [];\n    }\n    return jsonCountries;\n}\n\nexport const getCountriesByName = async(name) => {\n    const countries = await fetch(`https://restcountries.eu/rest/v2/name/${name}?\n        fields=alpha3Code;name;population;region;capital;flag`);\n    const jsonCountries = await countries.json();\n    if(jsonCountries.status === 404) {\n        return [];\n    }\n    return jsonCountries;\n}\n\nexport const getCountriesByRegion = async(region) => {\n    const countries = await fetch(`https://restcountries.eu/rest/v2/region/${region}?\n        fields=alpha3Code;name;population;region;capital;flag`);\n    const jsonCountries = await countries.json();\n    if(jsonCountries.status === 404) {\n        return [];\n    }\n    return jsonCountries;\n}\n\nexport const getCountriesByCode = async(code) => {\n    const countries = await fetch(`https://restcountries.eu/rest/v2/alpha/${code}`);\n    const jsonCountries = await countries.json();\n    if(jsonCountries.status === 404) {\n        return [];\n    }\n    return jsonCountries;\n}","//getCountriesByCode\n\nimport { useEffect, useState } from \"react\"\nimport { getCountries, getCountriesByCode, getCountriesByName, getCountriesByRegion } from \"../helpers/getCountries\";\n\nexport const useGetCountries = ({get,country}) => {\n\n    const [state, setState] = useState({\n        countries: [],\n        loading: true\n    });\n    \n    useEffect(() => {\n        switch (get) {\n            case 'all':\n                getCountries()\n                    .then(data => {\n                        setState({\n                            countries: data,\n                            loading: false\n                        });\n                    })\n                break;\n            case 'byName':\n                getCountriesByName(country.name)\n                    .then(data => {\n                        setState({\n                            countries: data,\n                            loading: false\n                        });\n                    });\n                break;\n            case 'byRegion':\n                getCountriesByRegion(country.region)\n                    .then(data => {\n                        setState({\n                            countries: data,\n                            loading: false\n                        });\n                    })\n                break;\n            case 'byAlpha3Code':\n                getCountriesByCode(country.alpha3Code)\n                    .then(data => {\n                        setState({\n                            countries: data,\n                            loading: false\n                        });\n                    })\n                break;\n            default:\n                setState({\n                    countries: [],\n                    loading: true\n                });\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[get,country?.alpha3Code,country?.region,country?.name]);\n\n    return state;\n}\n","import React, { useState } from 'react'\n\nimport {CountriesList} from '../countries/CountriesList';\nimport {SearchCountries} from '../countries/SearchCountries'\nimport { useGetCountries } from '../../hooks/useGetCountries';\n\nexport const HomeScreen = () => {\n\n    const [country, setCountry] = useState({\n        get: 'all'\n    });\n\n    const {countries} = useGetCountries(country);\n\n    return (\n        <div className=\"home\">\n            <SearchCountries setCountry={setCountry}/>\n            <CountriesList countries={countries} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { useGetCountries } from '../../hooks/useGetCountries';\n\nexport const CountryScreen = () => {\n    \n    const history = useHistory();\n    const {alpha3Code} = useParams();\n    \n    const {countries:country,loading} = useGetCountries({\n        get: 'byAlpha3Code',\n        country: {\n            alpha3Code\n        }\n    });\n\n    const goBack = () => {\n        history.push('/api-rest-countries/')\n    }\n\n    //console.log((country.borders).length);\n\n    return (\n        <div className=\"main\">\n            <button onClick={goBack} className=\"btn\">\n                <i className=\"fas fa-arrow-left\"></i> Back\n            </button>\n            <div className=\"details\">\n                {!loading || 'cargando'}\n                <img\n                    className=\"details__img\"\n                    src={country.flag} alt={country.name} loading=\"lazy\" />\n                <div className=\"details__main\">\n                    <h3>{country.name}</h3>\n                    <div className=\"details__content\">\n                        <div className=\"details__primary\">\n                            <p>Native Name: <span>{country.nativeName}</span></p>\n                            <p>Population: <span>{country.population}</span></p>\n                            <p>Region: <span>{country.region}</span></p>\n                            <p>Sub Region: <span>{country.subregion}</span></p>\n                            <p>Capital: <span>{country.capital}</span></p>\n\n                        </div>\n                        <div className=\"details__secondary\">\n                            <p>Top Level Domain: \n                                <span>\n                                    {country.topLevelDomain?.map(domain => (\n                                        domain\n                                    ))}\n                                </span>\n                            </p>\n                            <p>\n                                Currencies: \n                                <span>\n                                    {country.currencies?.map(currency => (\n                                        currency.name\n                                    ))}\n                                </span>\n                            </p>\n                            <p>\n                                Languages: \n                                <span>\n                                    {country.languages?.map(language => (\n                                        language.name + ', ' \n                                    ))} \n                                </span>\n                            </p>\n                        </div>\n                        \n                        {\n                            (country.borders)?.length === 0 ||\n                            <div className=\"details__tertiary\">\n                                <p>\n                                    Border Countries: \n                                    {\n                                        country.borders?.map(border => (\n                                            <span className=\"details__border\" key={border}>\n                                                {border}\n                                            </span>\n                                        ))\n                                    }\n                                </p>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\nimport {Navbar} from '../components/ui/Navbar'\nimport {HomeScreen} from '../components/home/HomeScreen'\nimport {CountryScreen} from '../components/countries/CountryScreen'\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/api-rest-countries/\" component={HomeScreen} />\n                <Route exact path=\"/api-rest-countries/country/:alpha3Code\" component={CountryScreen} />\n            </Switch>\n        </Router>\n    )\n}\n","import React from 'react';\n\nimport {AppRouter} from './router/AppRouter'\nimport './style/style.css';\n\nexport const App = () => {\n    return (\n        <AppRouter />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\n\nimport {App} from './App'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}