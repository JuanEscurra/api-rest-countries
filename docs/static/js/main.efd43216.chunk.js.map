{"version":3,"sources":["components/ui/Navbar.js","components/countries/CountryItem.js","components/countries/CountriesList.js","components/countries/SearchCountries.js","helpers/getCountries.js","hooks/useGetCountries.js","components/home/HomeScreen.js","components/countries/CountryScreen.js","router/AppRouter.js","App.js","index.js"],"names":["Navbar","useState","mode","setMode","className","to","onClick","document","documentElement","style","setProperty","CountryItem","country","history","useHistory","push","alpha3Code","toLowerCase","src","img","loading","alt","name","population","region","capital","CountriesList","countries","length","map","cca3","common","flags","png","SearchCountries","setCountry","handleSearch","e","undefined","target","value","get","id","placeholder","onChange","defaultValue","getCountries","a","fetch","json","jsonCountries","status","getCountriesByName","getCountriesByRegion","getCountriesByCode","code","useGetCountries","state","setState","useEffect","then","data","HomeScreen","CountryScreen","useParams","console","log","official","subregion","currencies","Object","values","currency","languages","language","borders","border","AppRouter","exact","path","component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.efd43216.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const [mode, setMode] = useState('light')\r\n\r\n    const changeMode = () => {\r\n        if(mode === 'light') {\r\n            document.documentElement.style.setProperty('--primary','hsl(207, 26%, 17%)');\r\n            document.documentElement.style.setProperty('--secondary','hsl(0, 0%, 100%)');\r\n            setMode('dark')\r\n        } else {\r\n            document.documentElement.style.setProperty('--primary','hsl(0, 0%, 98%)');\r\n            document.documentElement.style.setProperty('--secondary','hsl(200, 15%, 8%)');\r\n            setMode('light');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar__logo\">\r\n                <Link to=\"/\" className=\"navbar__title\">Where in the world?</Link>\r\n            </div>\r\n            <ul className=\"navbar__list\">\r\n                <li className=\"navbar__item\">\r\n                    <button className=\"navbar__btn\" onClick={changeMode}>\r\n                        <i className=\"far fa-moon\"></i> Dark Mode\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const CountryItem = ({country}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const viewDetails = () => {\r\n        history.push(`/country/${country.alpha3Code.toLowerCase()}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"country\" onClick={viewDetails}>\r\n            <img src={country.img} loading=\"lazy\" alt={country.name} className=\"country__img\"/>\r\n            <div className=\"country__description\">\r\n                <h4>{country.name}</h4>\r\n                <p>Population: <span>{country.population}</span></p>\r\n                <p>Region: <span>{country.region}</span></p>\r\n                <p>Capital: <span>{country.capital}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {CountryItem} from './CountryItem'\r\n\r\nexport const CountriesList = ({countries}) => {\r\n\r\n    return (\r\n        <div className=\"countries__list\">\r\n            {\r\n                countries?.length !== 0 || <span>No se encontro paises</span>\r\n            }\r\n            {\r\n                \r\n                countries?.map(country => (\r\n                    <CountryItem key={country.cca3}\r\n                        country={\r\n                            {\r\n                                alpha3Code: country.cca3,\r\n                                name: country.name.common,\r\n                                population: country.population,\r\n                                region: country.region,\r\n                                capital: country.capital,\r\n                                img: country.flags.png\r\n                            }\r\n                        }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const SearchCountries = ({setCountry}) => {\r\n\r\n    const handleSearch = (e) => {\r\n        if(e.target.value !== undefined && e.target.value !== \"\") {\r\n            setCountry({\r\n                get: e.target.name === 'region' ? 'byRegion': 'byName',\r\n                country: {[e.target.name]: e.target.value}\r\n            });\r\n        } else {\r\n            setCountry({\r\n                get: 'all'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search__camp--input\">\r\n                <i className=\"fas fa-search\"></i>\r\n                <input className=\"search__input\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Search for a country\"\r\n                    onChange={handleSearch} />\r\n            </div>\r\n            <div className=\"search__camp--select\">\r\n                <select name=\"region\" id=\"region\" className=\"search__select\" onChange={handleSearch}>\r\n                    <option value=\"\" defaultValue>Filter by Region</option>\r\n                    <option value=\"africa\">Africa</option>\r\n                    <option value=\"americas\">Americas</option>\r\n                    <option value=\"asia\">Asia</option>\r\n                    <option value=\"europe\">Europe</option>\r\n                    <option value=\"oceania\">Oceania</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","\r\nexport const getCountries = async() => {\r\n    const countries = await fetch(`https://restcountries.com/v3.1/all?\r\n        fields=cca3;name;population;region;capital;flag`);\r\n    const jsonCountries = await countries.json();\r\n    if(jsonCountries.status === 404) {\r\n        return [];\r\n    }\r\n    return jsonCountries;\r\n}\r\n\r\nexport const getCountriesByName = async(name) => {\r\n    const countries = await fetch(`https://restcountries.com/v3.1/name/${name}?\r\n        fields=alpha3Code;name;population;region;capital;flag`);\r\n    const jsonCountries = await countries.json();\r\n    if(jsonCountries.status === 404) {\r\n        return [];\r\n    }\r\n    return jsonCountries;\r\n}\r\n\r\nexport const getCountriesByRegion = async(region) => {\r\n    const countries = await fetch(`https://restcountries.com/v3.1/region/${region}?\r\n        fields=alpha3Code;name;population;region;capital;flag`);\r\n    const jsonCountries = await countries.json();\r\n    if(jsonCountries.status === 404) {\r\n        return [];\r\n    }\r\n    return jsonCountries;\r\n}\r\n\r\nexport const getCountriesByCode = async(code) => {\r\n    const countries = await fetch(`https://restcountries.com/v3.1/alpha/${code}`);\r\n    const jsonCountries = await countries.json();\r\n    if(jsonCountries.status === 404) {\r\n        return [];\r\n    }\r\n    return jsonCountries;\r\n}","//getCountriesByCode\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getCountries, getCountriesByCode, getCountriesByName, getCountriesByRegion } from \"../helpers/getCountries\";\r\n\r\nexport const useGetCountries = ({get,country}) => {\r\n\r\n    const [state, setState] = useState({\r\n        countries: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        switch (get) {\r\n            case 'all':\r\n                getCountries()\r\n                    .then(data => {\r\n                        setState({\r\n                            countries: data,\r\n                            loading: false\r\n                        });\r\n                    })\r\n                break;\r\n            case 'byName':\r\n                getCountriesByName(country.name)\r\n                    .then(data => {\r\n                        setState({\r\n                            countries: data,\r\n                            loading: false\r\n                        });\r\n                    });\r\n                break;\r\n            case 'byRegion':\r\n                getCountriesByRegion(country.region)\r\n                    .then(data => {\r\n                        setState({\r\n                            countries: data,\r\n                            loading: false\r\n                        });\r\n                    })\r\n                break;\r\n            case 'byAlpha3Code':\r\n                getCountriesByCode(country.alpha3Code)\r\n                    .then(data => {\r\n                        setState({\r\n                            countries: data[0],\r\n                            loading: false\r\n                        });\r\n                    })\r\n                break;\r\n            default:\r\n                setState({\r\n                    countries: [],\r\n                    loading: true\r\n                });\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[get,country?.alpha3Code,country?.region,country?.name]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport {CountriesList} from '../countries/CountriesList';\r\nimport {SearchCountries} from '../countries/SearchCountries'\r\nimport { useGetCountries } from '../../hooks/useGetCountries';\r\n\r\nexport const HomeScreen = () => {\r\n\r\n    const [country, setCountry] = useState({\r\n        get: 'all'\r\n    });\r\n\r\n    const {countries} = useGetCountries(country);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <SearchCountries setCountry={setCountry}/>\r\n            <CountriesList countries={countries} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { useGetCountries } from '../../hooks/useGetCountries';\r\n\r\nexport const CountryScreen = () => {\r\n    \r\n    const history = useHistory();\r\n    const {alpha3Code} = useParams();\r\n    \r\n    const {countries:country,loading} = useGetCountries({\r\n        get: 'byAlpha3Code',\r\n        country: {\r\n            alpha3Code\r\n        }\r\n    });\r\n\r\n    const goBack = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    console.log(country);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <button onClick={goBack} className=\"btn\">\r\n                <i className=\"fas fa-arrow-left\"></i> Back\r\n            </button>\r\n            <div className=\"details\">\r\n                {!loading || 'cargando'}\r\n                    <img\r\n                        className=\"details__img\"\r\n                        src={country.flags?.png} alt={\"imagen\"} loading=\"lazy\" />\r\n                <div className=\"details__main\">\r\n                    <h3>{country.name?.common}</h3>\r\n                    <div className=\"details__content\">\r\n                        <div className=\"details__primary\">\r\n                            <p>Native Name: <span>{country.name?.official}</span></p>\r\n                            <p>Population: <span>{country.population}</span></p>\r\n                            <p>Region: <span>{country.region}</span></p>\r\n                            <p>Sub Region: <span>{country.subregion}</span></p>\r\n                            <p>Capital: <span>{country.capital}</span></p>\r\n\r\n                        </div>\r\n                        <div className=\"details__secondary\">\r\n                            <p>\r\n                                Currencies: \r\n                                <span>\r\n                                    {country.currencies != null\r\n                                        && Object.values(country?.currencies).map(currency => currency.name + \", \")}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                Languages:  \r\n                                <span>\r\n                                    {country.languages != null\r\n                                        && Object.values(country?.languages).map(language => language + \", \")}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        \r\n                        {\r\n                            (country.borders)?.length === 0 ||\r\n                            <div className=\"details__tertiary\">\r\n                                <p>\r\n                                    Border Countries: \r\n                                    {\r\n                                        country.borders?.map(border => (\r\n                                            <span className=\"details__border\" key={border}>\r\n                                                {border}\r\n                                            </span>\r\n                                        ))\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nimport {Navbar} from '../components/ui/Navbar'\r\nimport {HomeScreen} from '../components/home/HomeScreen'\r\nimport {CountryScreen} from '../components/countries/CountryScreen'\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomeScreen} />\r\n                <Route exact path=\"/country/:alpha3Code\" component={CountryScreen} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport {AppRouter} from './router/AppRouter'\r\nimport './style/style.css';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nimport {App} from './App'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}